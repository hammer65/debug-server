var nwgui;
var extend = require('extend');
var lf = require('logfile');
var util = require('util');
var events = require('events');
var CLOSED = 0;
var OPEN = 1;

function logWindow(config,category){
	nwgui = config.gui;
	events.EventEmitter.call(this);
	this.config = config;
	this.category = (typeof category != 'undefined') ? category : null;
	this.state = CLOSED;
	this.winRef;
	this.dom;
	this.on('loaded',function(ref){
		this.winRef = ref;
		this.winRef.setShowInTaskbar(false);
		var title = this.category ? this.category : 'Main Log';
		this.winRef.title = title;
		this.dom = ref.window;
		this.state = OPEN;
	});
	this.on('close',function(){
		this.winRef = null;
		this.dom = null;
		this.state = CLOSED;
	});
}

util.inherits(logWindow,events);

logWindow.prototype.open = function(){
	var self = this;
	lf.read(this.category,this.config.logs,function(reader){
		var winRef = nwgui.Window.open('logfile.html',self.config.logWindow);
		var blah = util.inspect(self.config);
		winRef.on('loaded',function(){
			self.emit('open');
			self.emit('loaded',winRef,self);
			while(reader.hasNextLine()){
				self.fillLine(reader.nextLine());
			}
			this.focus();
		});
	});
};

logWindow.prototype.callWinFunction = function(){
	if(this.winRef && this.dom){
		var func = Array.prototype.shift.call(arguments);
		return this.dom[func](arguments);
	}else{
		return false;
	}
};

logWindow.prototype.fillLine = function(line){
	this.callWinFunction('fillLine',line);
};

logWindow.prototype.close = function(){
	this.winRef.close();
	this.emit('close',this);
};

logWindow.prototype.capture = function(){
	this.winRef.capturePage(function(url){
		this.emit('captured',url);
	});
};

logWindow.prototype.focus = function(){
	this.winRef.focus();
};

module.exports = logWindow;