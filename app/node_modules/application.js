var logWindow = require('logwindow');
var lf = require('logfile');
var util = require('util');
var events = require('events');
var nwgui;

function application(config,gui){
	events.EventEmitter.call(this);
	this.config = config;
	this.windows = {};
	this.blah = 'blah';
	nwgui = gui;
	this.config.gui = gui;
	this.on('windowloaded',function(wObj,category){
		category = category ? category : 'GENERAL_CAT';
		this.windows[category] = wObj;
		wObj.on('close',function(w){
			var category = w.category ? w.category : 'GENERAL_CAT'
			delete this.windows[category]
		});
	});
	var win = nwgui.Window.get();
	this.mainWindow = {
		win: win,
		dom: win.window
	};
}

util.inherits(application,events);

application.prototype.openLogWindow = function(category){
	this.windows[category] = new logWindow(this.config,category);
	this.windows[category].on('loaded',function(window){
		this.emit('windowloaded',window,category);
	});
	this.windows[category].open();
};

application.prototype.closeLogWindow = function(category){
	category = category ? category : 'GENERAL_CAT';
	if(typeof this.windows[category] != 'undefined'){
		this.windows[category].close();
		this.emit('windowclosed',category);
		return true;
	}else{
		return false;
	}
};

application.prototype.focusWindow = function(category){
	category = category ? category : 'GENERAL_CAT';
	if(typeof this.windows[category] != 'undefined'){
		this.windows[category].focus();
	}
};

application.prototype.addLogLine = function(message,category){
	category = category ? category : 'GENERAL_CAT';
	if(typeof this.windows[category] != 'undefined'){
		this.windows[category].fillLine(message);
	}
};

application.prototype.quit = function(){
	this.emit('shutdown');
	if(this.config.hardShutdown){
		nwgui.App.quit();
	}else{
		nwgui.App.closeAllWindows();
	}
}

application.prototype.list = function(){
	var app = this;
	lf.list(null,this.config.logs,function(e,data){
		if(e){ console.log(e.message); return false}
		var el = app.mainWindow.dom.$('#groups');
		var row, controls, lnk, clear, del;
		for(var i = 0;i < data.length;i++){
			row = app.mainWindow.dom.$(
				'<div class="category"></div>');
			controls = app.mainWindow.dom.$(
				'<div class="controls"></div>'
			);
			lnk = app.mainWindow.dom.$(
				'<a>' + data[i] + '</a>');
			lnk.attr('class','cat-link');
			lnk.attr('href','#');
			lnk.attr('data-category',data[i]);
			lnk.attr('id','cat_' + data[i]);
			lnk.attr('title','Click to view log for ' + data[i]);
			lnk.click(function(event){
				var el = event.target;
				app.openLogWindow(el.getAttribute('data-category'));
				event.preventDefault();
			});
			clear = app.mainWindow.dom.$(
				'<a>clr</a>');
			clear.attr('class','clr-link');
			clear.attr('href','#');
			clear.attr('data-category',data[i]);
			clear.attr('clrcat_' + data[i]);
			clear.attr('title','Click to clear log for ' + data[i])
			clear.click(function(event){
				if(app.mainWindow.dom.confirm('Are you sure you want to clear this log?')){
					var el = event.target;
					app.clearLog(el.getAttribute('data-category'));
				}
			});
			del = app.mainWindow.dom.$(
				'<a>X</a>'
				);
			del.attr('class','del-link');
			del.attr('href','#');
			del.attr('data-category',data[i]);
			del.attr('id','delcat_' + data[i]);
			del.attr('title','Click to delete log and category for ' + data[i])
			del.click(function(event){
				if(app.mainWindow.dom.confirm('Are you sure you want to delete this log?')){
					var el = event.target;
					app.deleteLog(el.getAttribute('data-category'));
				}

			});
			row.append(lnk);
			controls.append(clear);
			controls.append(del);
			row.append(controls);
			el.append(row);
		}
	});
}

module.exports = application;